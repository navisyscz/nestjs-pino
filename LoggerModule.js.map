{"version":3,"file":"LoggerModule.js","sourceRoot":"","sources":["../src/LoggerModule.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  Global,\n  Module,\n  DynamicModule,\n  NestModule,\n  MiddlewareConsumer,\n  RequestMethod,\n  Inject,\n} from '@nestjs/common';\nimport { Provider } from '@nestjs/common/interfaces';\nimport { pinoHttp } from 'pino-http';\n\nimport { createProvidersForDecorated } from './InjectPinoLogger';\nimport { Logger } from './Logger';\nimport {\n  Params,\n  LoggerModuleAsyncParams,\n  PARAMS_PROVIDER_TOKEN,\n} from './params';\nimport { PinoLogger } from './PinoLogger';\n\nconst DEFAULT_ROUTES = [{ path: '*', method: RequestMethod.ALL }];\n\n@Global()\n@Module({ providers: [Logger], exports: [Logger] })\nexport class LoggerModule implements NestModule {\n  static forRoot(params?: Params): DynamicModule {\n    const paramsProvider: Provider<Params> = {\n      provide: PARAMS_PROVIDER_TOKEN,\n      useValue: params || {},\n    };\n\n    const decorated = createProvidersForDecorated();\n\n    return {\n      module: LoggerModule,\n      providers: [Logger, ...decorated, PinoLogger, paramsProvider],\n      exports: [Logger, ...decorated, PinoLogger, paramsProvider],\n    };\n  }\n\n  static forRootAsync(params: LoggerModuleAsyncParams): DynamicModule {\n    const paramsProvider: Provider<Params | Promise<Params>> = {\n      provide: PARAMS_PROVIDER_TOKEN,\n      useFactory: params.useFactory,\n      inject: params.inject,\n    };\n\n    const decorated = createProvidersForDecorated();\n\n    const providers: any[] = [\n      Logger,\n      ...decorated,\n      PinoLogger,\n      paramsProvider,\n      ...(params.providers || []),\n    ];\n\n    return {\n      module: LoggerModule,\n      imports: params.imports,\n      providers,\n      exports: [Logger, ...decorated, PinoLogger, paramsProvider],\n    };\n  }\n\n  constructor(@Inject(PARAMS_PROVIDER_TOKEN) private readonly params: Params) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    const { exclude, forRoutes = DEFAULT_ROUTES, pinoHttp } = this.params;\n\n    const middlewares = createLoggerMiddlewares(pinoHttp || {});\n\n    if (exclude) {\n      const safeExcludes = exclude.filter(\n        (e): e is string | { path: string; method: RequestMethod } =>\n          typeof e === 'string' || ('path' in e && 'method' in e),\n      );\n\n      consumer\n        .apply(...middlewares)\n        .exclude(...safeExcludes)\n        .forRoutes(...forRoutes);\n    } else {\n      consumer.apply(...middlewares).forRoutes(...forRoutes);\n    }\n  }\n}\n\nfunction createLoggerMiddlewares(params: NonNullable<Params['pinoHttp']>) {\n  const normalized = Array.isArray(params) ? params : [params];\n\n  console.clear();\n  console.log(\n    'ðŸ§ª Normalized pinoHttp params:',\n    JSON.stringify(normalized, null, 2),\n  );\n\n  const middleware = pinoHttp(...(normalized as [any]));\n\n  // @ts-expect-error: root is readonly field, but this is the place where it's set actually\n  PinoLogger.root = middleware.logger;\n\n  return [middleware];\n}\n"]}